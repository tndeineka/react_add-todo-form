{"version":3,"sources":["api/users.ts","services/user.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","components/TodoForm/TodoForm.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","getUserById","userId","usersFromServer","find","user","UserInfo","className","href","TodoInfo","todo","completed","title","cn","TodoList","todos","map","TodoForm","onSubmit","useState","setTitle","hasTitleError","setHasTitleError","setUserId","hasUserIdError","setHasUserIdError","action","method","event","preventDefault","trim","Number","htmlFor","type","placeholder","value","onChange","target","required","disabled","newTodoId","Math","max","App","setTodo","data","newTodo","currentTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.81560fcb.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import usersFromServer from '../api/users';\nimport { User } from '../types/User';\n\nexport function getUserById(userId: number): User | null {\n  return usersFromServer.find(user => user.id === userId)\n    || null;\n}\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  const { name, email } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import cn from 'classnames';\nimport React from 'react';\nimport { UserInfo } from '../UserInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    user,\n    completed,\n    title,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={cn('TodoInfo', { 'TodoInfo--completed': completed })}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {user && <UserInfo user={user} />}\n    </article>\n  );\n};\n","import React from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => (\n  <section className=\"TodoList\">\n    <ul className=\"List\">\n      {todos.map(todo => (\n        <li key={todo.id}>\n          <TodoInfo todo={todo} />\n        </li>\n      ))}\n    </ul>\n  </section>\n);\n","import React, { useState } from 'react';\nimport usersFromServer from '../../api/users';\nimport { Todo } from '../../types/Todo';\nimport { getUserById } from '../../services/user';\n\ntype Props = {\n  onSubmit: (post: Todo) => void;\n};\n\nexport const TodoForm: React.FC<Props> = ({ onSubmit }) => {\n  const [title, setTitle] = useState('');\n  const [hasTitleError, setHasTitleError] = useState(false);\n\n  const [userId, setUserId] = useState(0);\n  const [hasUserIdError, setHasUserIdError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value);\n    setHasTitleError(false);\n  };\n\n  const handleUserIdChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setUserId(+event.target.value);\n    setHasUserIdError(false);\n  };\n\n  const reset = () => {\n    setTitle('');\n    setUserId(0);\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setHasUserIdError(!userId);\n\n    if (!title.trim() || !userId) {\n      return;\n    }\n\n    onSubmit({\n      id: 0,\n      title: title.trim(),\n      userId: Number(userId),\n      completed: false,\n      user: getUserById(userId),\n    });\n\n    reset();\n  };\n\n  return (\n    <form\n      action=\"/api/todos\"\n      method=\"POST\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"field\">\n        <label className=\"label\" htmlFor=\"todo-title\">\n          Title:&nbsp;\n        </label>\n\n        <input\n          id=\"todo-title\"\n          type=\"text\"\n          data-cy=\"titleInput\"\n          placeholder=\"Enter a title\"\n          value={title}\n          onChange={handleTitleChange}\n        />\n\n        {hasTitleError && (\n          <span className=\"error\">Please enter a title</span>\n        )}\n      </div>\n\n      <div className=\"field\">\n        <label htmlFor=\"todo-user\">\n          User:&nbsp;\n        </label>\n\n        <select\n          id=\"todo-user\"\n          data-cy=\"userSelect\"\n          required\n          value={userId}\n          onChange={handleUserIdChange}\n        >\n          <option value=\"0\" disabled>Choose a user</option>\n\n          {usersFromServer.map(user => (\n            <option\n              value={user.id}\n              key={user.id}\n            >\n              {user.name}\n            </option>\n          ))}\n\n        </select>\n\n        {hasUserIdError && (\n          <span className=\"error\">Please choose a user</span>\n        )}\n\n      </div>\n\n      <button\n        type=\"submit\"\n        data-cy=\"submitButton\"\n      >\n        Add\n      </button>\n    </form>\n  );\n};\n","import './App.scss';\n\nimport { useState } from 'react';\nimport todosFromServer from './api/todos';\nimport { getUserById } from './services/user';\nimport { TodoList } from './components/TodoList';\nimport { TodoForm } from './components/TodoForm';\nimport { Todo } from './types/Todo';\n\nexport const todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId),\n}));\n\nexport const newTodoId: number = Math.max(\n  ...todos.map(todo => todo.id),\n) + 1;\n\nexport const App = () => {\n  const [todo, setTodo] = useState<Todo[]>(todos);\n\n  const addTodo = ({ id, ...data }: Todo) => {\n    const newTodo = {\n      id: newTodoId,\n      ...data,\n    };\n\n    setTodo(currentTodo => [...currentTodo, newTodo]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <TodoForm onSubmit={addTodo} />\n\n      <TodoList todos={todo} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}